{
  "keywordFileContentHash": "B4B34D235001837362BB14E22EF88AA0",
  "keywordClasses": [
    {
      "name": "com.kazurayam.junit4ks.JUnitCustomKeywords",
      "keywordMethods": [
        {
          "name": "runWithJUnitRunner",
          "parameters": [
            {
              "name": "junitRunnerClass",
              "initialExpression": "",
              "type": {
                "fullClassName": "java.lang.Class",
                "unresolvedClassName": "Class",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            },
            {
              "name": "flowControl",
              "initialExpression": "",
              "type": {
                "fullClassName": "com.kms.katalon.core.model.FailureHandling",
                "unresolvedClassName": "FailureHandling",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\n\t * Example:\n\t *\n\t * You can run the following test case `Test Cases/test/CalculatorTestRunner` in Katalon Studio\n\t * just as you run a usual test case by clicking the Run button.\n\t *\n\t * Test Case:\n\t * \u003cPRE\u003e\n\t * import junittutorial.CalculatorTest\n\t * CustomKeywords.\u0027com.kazurayam.ksbackyard.junit.JUnitCustomKeywordsTest.runWithJUnitRunner\u0027(CalculatorTest.class)\n\t * \u003c/PRE\u003e\n\t *\n\t * The following is a JUnit test (localated at Include/scripts/groovy/junittutorial/CalculatorTest.groovy)\n\t * executed by the above test case:\n\t * \u003cPRE\u003e\n\t * package junittutorial\n\t *\n\t * import static org.hamcrest.CoreMatchers.*\n\t * import static org.junit.Assert.*\n\t *\n\t * import org.junit.Test\n\t * import org.junit.runner.RunWith\n\t * import org.junit.runners.JUnit4\n\t *\n\t * @RunWith(JUnit4.class)\n\t * class CalculatorTest {\n\t * \t@Test\n\t * \tvoid testMultiply() {\n\t * \t\tint expected \u003d 21\n\t * \t\tint actual \u003d Calculator.multiply(7, 3)\n\t * \t\tassertThat(actual, is(expected))\n\t * \t}\n\t *\n\t * \t@Test\n\t * \tvoid testDivide_wrongType() {\n\t * \t\tdouble expected \u003d 1.5f\n\t * \t\tdouble actual \u003d Calculator.divide(3, 2)\n\t * \t\tassertThat(actual, is(not(expected)))\n\t * \t}\n\t *\n\t * \t@Test\n\t * \tvoid testDivide() {\n\t * \t\tint expected \u003d 1\n\t * \t\tint actual \u003d Calculator.divide(3, 2)\n\t * \t\tassertThat(actual, is(expected))\n\t * \t}\n\t * }\n\t * \u003c/PRE\u003e\n\t *\n\t * Finally the class to be tested is located at `Keywords/junittutorial/Calculator.groovy`:\n\t * \u003cPRE\u003e\n\t * package junittutorial\n\t *\n\t * import com.kms.katalon.core.annotation.Keyword\n\t *\n\t * class Calculator {\n\t *\n\t * \t   @Keyword\n\t * \t   static int add(int a, int b) {\n\t * \t\t   return a + b;\n\t * \t   }\n\t *\n\t * \t   @Keyword\n\t * \t   static int subtract(int a, int b) {\n\t * \t\t   return a - b;\n\t * \t   }\n\t *\n\t * \t   @Keyword\n\t * \t   static int multiply(int x, int y) {\n\t * \t\t   return x * y\n\t * \t   }\n\t *\n\t * \t   @Keyword\n\t * \t   static int divide(int x, int y) {\n\t * \t\t   return x / y\n\t * \t   }\n\t *\n\t * \t   @Keyword\n\t * \t   static int power(int a, int b){\n\t * \t\t   int answer \u003da;\n\t * \t\t   for (int x \u003d 2; x \u003c\u003d b; x++){\n\t * \t\t       answer *\u003d a;\n\t * \t\t   }\n\t * \t\t   return answer;\n\t *     }\n\t * }\n\t * \u003c/PRE\u003e\n\t *\n\t * Please note that in the targeted Custom Keyword (e.g, Keywords/com/example/MiniScreenshotDriver.groovy) and\n\t * JUnit test (e.g, Include/scripts/groovy/com/example/MiniScreenshotDriverTest.groovy), you can call\n\t * any Katalon Studio API including org.openqa.selenium.WebDriver. Your JUnit invoked within Katalon Studio now\n\t * can interact with your Application Under Test (web site) through WebDriver. This is what I wanted to achieve.\n\t *\n\t * @param junitRunnerClass\n\t * @param flowControl\n\t * @return\n\t */"
        },
        {
          "name": "runWithJUnitRunner",
          "parameters": [
            {
              "name": "junitRunnerClass",
              "initialExpression": "",
              "type": {
                "fullClassName": "java.lang.Class",
                "unresolvedClassName": "Class",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\n\t * Run the given \u003ccode\u003ejunitRunnerClass\u003c/code\u003e that is annotated with\n\t * {@link JUnit} runner by invoke JUnit runner.\n\t *\n\t * @param junitRunnerClass a class that is annotated with {@link JUnit} runner.\n\t *\n\t * \u003cp\u003e\n\t * Example of \u003ccode\u003ejunitRunnerClass\u003c/code\u003e:\n\t * \u003cul\u003e\n\t * \u003cli\u003e\n\t * \u003cpre\u003e\n\t * import org.junit.runner.RunWith\n\t * import org.junit.runners.JUnit4\n\t * \u0026#64;RunWith(JUnit4.class)\n\t * public class MyJunitRunner {}\n\t *\n\t * \u003c/pre\u003e\n\t * \u003c/li\u003e\n\t * \u003c/ul\u003e\n\t * \u003c/p\u003e\n\t * @return\n\t */"
        }
      ]
    },
    {
      "name": "com.kazurayam.junit4ks.JUnitCustomKeywords$JUnitRunnerResult",
      "keywordMethods": []
    },
    {
      "name": "com.kazurayam.junit4ks.JUnitCustomKeywords$JUnitRunnerResultImpl",
      "keywordMethods": []
    }
  ],
  "javadocParsed": true
}