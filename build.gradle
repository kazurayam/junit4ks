plugins {
    id 'groovy'
    id 'com.vanniktech.maven.publish' version '0.34.0'
    // https://github.com/vanniktech/gradle-maven-publish-plugin/blob/main/docs/central.md
}

group = "com.kazurayam"
version = "1.6.3"

ext {
    groovyVersion   = '3.0.17'
    GitHubUserName = 'kazurayam'
}

configurations {
    generateDocs
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation fileTree(dir: "Drivers", include:['*.jar'])
    implementation "org.codehaus.groovy:groovy-all:${groovyVersion}"
    implementation fileTree(dir: "/Applications/Katalon Studio.app/Contents/Eclipse/plugins", include: ['*.jar'])
    implementation fileTree(dir: "/Applications/Katalon Studio.app/Contents/Eclipse/configuration/resources/lib", include: ['*.jar'])
    generateDocs "org.codehaus.groovy:groovy-all:${groovyVersion}"
}

sourceSets {
    main {
        groovy {
            srcDirs = ['Keywords', 'Libs']
            excludes = ['**/CustomKeywords.groovy',
                "**/Temp*.groovy",
                "internal/**",
                "junittutorial/**",
                "katalon-plugin.json"
                ]
        }
    }
    test {
         groovy {
            srcDirs = ['Include/scripts/groovy']
            excludes = ['junittutorial/**', '**/Temp*.groovy']
         }
    }
}

mavenPublishing {
    publishToMavenCentral()
    signAllPublications()

    coordinates(project.group,              // com.kazurayam
                project.rootProject.name,   // junit4ks
                project.version)            // e.g, g1.6.3 or 1.6.3-SNAPSHOT

    pom {
        name.set(project.rootProject.name)
        description.set('A Katalon Studio plugin that enables running JUnit4 tests for Custom Keyword classes')
        inceptionYear.set('2019')
        url.set("https://${GitHubUserName}.github.io/junit4ks/")
        licenses {
            license {
                name.set('The Apache License, Version 2.0')
                url.set('https://www.apache.org.licenses/LICENSE-2.0.txt')
                distribution.set('http://www.apache.org/licenses/LICENSE-2.0.txt')
            }
        }
        developers {
            developer {
                id.set("${GitHubUserName}")
                name.set('URAYAMA,kazuaki')
                url.set("https://github.com/${GitHubUserName}/")
            }
        }
        scm {
            connection = "scm:git:https://github.com/${GitHubUserName}/${project.rootProject.name}.git"
            developerConnection = "scm:git:git@github.com:${GitHubUserName}/${project.rootProject.name}.git"
            url = "https://github.com/${GitHubUserName}/${project.rootProject.name}"
        }
    }
}
/*
 * ~/.gradle/gradle.properites should contain the following properites:
mavenCentralUsername=your-username
mavenCentralPassword=your-password
signing.keyId=12345678
signing.password=some_password
signing.secretKeyRingFile=/Users/yourusername/.gnupg/secring.gpg
 */

task groovydoc(type: Groovydoc, overwrite:true) {
    group = 'com.kazurayam'
    source = sourceSets.main.groovy
    classpath = configurations.generateDocs
    groovyClasspath = configurations.generateDocs
    include 'com/kazurayam/ks/*'
    exclude '**/*Test.groovy'
}
task publishGroovydoc(type: Copy) {
    from 'build/docs/groovydoc'
    into 'docs/api'
}
groovydoc.finalizedBy publishGroovydoc

task groovydocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from groovydoc
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}
